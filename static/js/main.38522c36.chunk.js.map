{"version":3,"sources":["assets/me.jpg","assets/model-3-hero-desktop-v2.jpg","ProjectsPage/ProjectsPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ProjectsPage","className","md","style","backgroundImage","tesla","backgroundSize","backgroundRepeat","backgroundAttachment","backgroundPosition","icon","gradient","rounded","href","target","far","test","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,qD,qOCmH5BC,EA9GM,WACnB,OACA,6BAASC,UAAU,oBACjB,wBAAIA,UAAU,uCAAd,0BAGA,uBAAGA,UAAU,uCAAb,8EAMA,kBAAC,IAAD,CAAcA,UAAU,oBACtB,kBAAC,IAAD,CAAQC,GAAG,KAAKD,UAAU,QACxB,kBAAC,IAAD,CAASA,UAAU,aAAaE,MAAO,CAC/BC,gBAAgB,OAAD,OACNC,IADM,KAEbC,eAAgB,SAChBC,iBAAkB,YAClBC,qBAAsB,WACtBC,mBAAoB,kBAG5B,yBAAKR,UAAU,wFACb,6BACE,wBAAIA,UAAU,eACZ,kBAAC,IAAD,CAASS,KAAK,QACd,qDAEF,wBAAIT,UAAU,yBACZ,4CAEF,uBAAGA,UAAU,QAAb,oPAGA,kBAAC,IAAD,CAAQU,SAAS,SAASC,SAAO,EAACC,KAAK,0CAA0CC,OAAO,UACtF,kBAAC,IAAD,CAASC,KAAG,EAACL,KAAK,QAAQT,UAAU,SADtC,qBAGA,kBAAC,IAAD,CAAQU,SAAS,SAASC,SAAO,EAACC,KAAK,sCAAsCC,OAAO,UAClF,kBAAC,IAAD,CAASC,KAAG,EAACL,KAAK,QAAQT,UAAU,UADtC,qBAOR,kBAAC,IAAD,CAAQC,GAAG,IAAID,UAAU,aACvB,kBAAC,IAAD,CAASA,UAAU,aAAaE,MAAO,CAC/BC,gBACE,uFAER,yBAAKH,UAAU,wFACb,6BACE,wBAAIA,UAAU,aACd,kBAAC,IAAD,CAASc,KAAG,EAACL,KAAK,aAChB,kDAEF,wBAAIT,UAAU,yBACZ,uDAEF,uBAAGA,UAAU,QAAb,4NAMA,kBAAC,IAAD,CAAQU,SAAS,OAAOC,SAAO,GAC7B,kBAAC,IAAD,CAASG,KAAG,EAACL,KAAK,QAAQT,UAAU,SADtC,gBAGA,kBAAC,IAAD,CAAQU,SAAS,OAAOC,SAAO,EAACC,KAAK,+CAA+CC,OAAO,UACzF,kBAAC,IAAD,CAASC,KAAG,EAACL,KAAK,QAAQT,UAAU,SADtC,sBAOR,kBAAC,IAAD,CAAQC,GAAG,IAAID,UAAU,aACvB,kBAAC,IAAD,CAASA,UAAU,aAAaE,MAAO,CAC/BC,gBAAe,cAAcY,IAAd,KACfV,eAAsB,QACtBC,iBAAsB,YACtBC,qBAAsB,WACtBC,mBAAsB,kBAE5B,yBAAKR,UAAU,wFACb,6BACE,wBAAIA,UAAU,cACZ,kBAAC,IAAD,CAASS,KAAK,SACd,wCAEF,wBAAIT,UAAU,yBACZ,gDAEF,uBAAGA,UAAU,QAAb,4NAMA,kBAAC,IAAD,CAAQU,SAAS,OAAOC,SAAO,GAC7B,kBAAC,IAAD,CAASG,KAAG,EAACL,KAAK,QAAQT,UAAU,SADtC,uBCxFCgB,MAVf,WACE,OACI,kBAAC,IAAD,CAAchB,UAAU,QACxB,kBAAC,IAAD,CAAQA,UAAU,oBAChB,kBAAC,EAAD,SCGYiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wBCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD6HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.38522c36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.d4ae5263.jpg\";","module.exports = __webpack_public_path__ + \"static/media/model-3-hero-desktop-v2.5e9877d2.jpg\";","import React from \"react\";\nimport { MDBContainer, MDBCol, MDBCard, MDBIcon, MDBBtn } from \"mdbreact\";\nimport test  from '../assets/me.jpg';\nimport tesla from '../assets/model-3-hero-desktop-v2.jpg';\n\nconst ProjectsPage = () => {\n  return (\n  <section className=\"text-center my-1\">\n    <h2 className=\"h1-responsive font-weight-bold my-2\">\n      Devin Tyler Cunningham\n    </h2>\n    <p className=\"grey-text w-responsive mx-auto mb-5\">\n      Seattle based Software Development Engineer.\n      Frenchie Dad.\n      Car Enthusiast.\n    </p>\n\n    <MDBContainer className=\"d-flex flex-wrap\">\n      <MDBCol md=\"12\" className=\"mb-4\">\n        <MDBCard className=\"card-image\" style={{\n                backgroundImage:\n                  `url(${tesla})`,\n                  backgroundSize: '1290px',\n                  backgroundRepeat: 'no-repeat',\n                  backgroundAttachment: 'absolute',\n                  backgroundPosition: 'center center',\n                  // filter: 'grayscale(100%)',\n              }}>\n          <div className=\"text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4 rounded\">\n            <div>\n              <h6 className=\"purple-text\">\n                <MDBIcon icon=\"car\" />\n                <strong> Passion Project</strong>\n              </h6>\n              <h3 className=\"py-3 font-weight-bold\">\n                <strong>myTesla</strong>\n              </h3>\n              <p className=\"pb-3\">\n                Multi-service web-app that Lorem, ipsum dolor sit amet consectetur adipisicing elit. Laborum quidem molestias recusandae harum sunt impedit dolor est. Officia dicta ea eaque ab neque libero aliquid! Nihil illo dignissimos eveniet voluptate.\n              </p>\n              <MDBBtn gradient=\"purple\" rounded href=\"https://github.com/DevinTyler26/myTesla\" target=\"_blank\">\n                <MDBIcon far icon=\"clone\" className=\"left\" /> view source code\n              </MDBBtn>\n              <MDBBtn gradient=\"purple\" rounded href=\"https://mytesla.devincunningham.com\" target=\"_blank\">\n                <MDBIcon far icon=\"clone\" className=\"right\" /> view project\n              </MDBBtn>\n            </div>\n          </div>\n        </MDBCard>\n      </MDBCol>\n      <MDBCol md=\"6\" className=\"md-0 mb-4\">\n        <MDBCard className=\"card-image\" style={{\n                backgroundImage:\n                  \"url(https://mdbootstrap.com/img/Photos/Horizontal/Nature/6-col/img%20%2873%29.jpg)\"\n              }}>\n          <div className=\"text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4 rounded\">\n            <div>\n              <h6 className=\"blue-text\">\n              <MDBIcon far icon=\"file-alt\" />\n                <strong> Professional</strong>\n              </h6>\n              <h3 className=\"py-3 font-weight-bold\">\n                <strong>This is card title</strong>\n              </h3>\n              <p className=\"pb-3\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                Repellat fugiat, laboriosam, voluptatem, optio vero odio\n                nam sit officia accusamus minus error nisi architecto\n                nulla ipsum dignissimos. Odit sed qui, dolorum!\n              </p>\n              <MDBBtn gradient=\"blue\" rounded>\n                <MDBIcon far icon=\"clone\" className=\"left\" /> View Resume\n              </MDBBtn>\n              <MDBBtn gradient=\"blue\" rounded href=\"https://www.linkedin.com/in/devincunningham/\" target=\"_blank\">\n                <MDBIcon far icon=\"clone\" className=\"left\" /> View LinkedIn\n              </MDBBtn>\n            </div>\n          </div>\n        </MDBCard>\n      </MDBCol>\n      <MDBCol md=\"6\" className=\"md-0 mb-4\">\n        <MDBCard className=\"card-image\" style={{\n                backgroundImage     : `url(${test})`,\n                backgroundSize      : '600px',\n                backgroundRepeat    : 'no-repeat',\n                backgroundAttachment: 'absolute',\n                backgroundPosition  : 'center center',\n              }}>\n          <div className=\"text-white text-center d-flex align-items-center rgba-black-strong py-5 px-4 rounded\">\n            <div>\n              <h6 className=\"green-text\">\n                <MDBIcon icon=\"male\" />\n                <strong> Me</strong>\n              </h6>\n              <h3 className=\"py-3 font-weight-bold\">\n                <strong>About Devin</strong>\n              </h3>\n              <p className=\"pb-3\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                Repellat fugiat, laboriosam, voluptatem, optio vero odio\n                nam sit officia accusamus minus error nisi architecto\n                nulla ipsum dignissimos. Odit sed qui, dolorum!\n              </p>\n              <MDBBtn gradient=\"aqua\" rounded>\n                <MDBIcon far icon=\"clone\" className=\"left\" /> placeholder\n              </MDBBtn>\n            </div>\n          </div>\n        </MDBCard>\n      </MDBCol>\n    </MDBContainer>\n  </section>\n  );\n}\n\nexport default ProjectsPage;","import React from 'react';\nimport './App.css';\nimport { MDBContainer, MDBRow } from \"mdbreact\";\nimport ProjectsPage from './ProjectsPage/ProjectsPage';\n\nfunction App() {\n  return (\n      <MDBContainer className=\"mt-5\">\n      <MDBRow className=\"mt-4 text-center\">\n        <ProjectsPage />\n      </MDBRow>\n    </MDBContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport \"../src/css/main-2.css\";\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}